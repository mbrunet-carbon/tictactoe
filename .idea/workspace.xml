<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5cc3a863-3764-4353-bfa1-7ef9e9ca42dd" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/components/board/Board.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/board/Board.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/board/Board.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/square/Square.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/square/Square.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/square/Square.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/types/SquareValue.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2pRBEp214kA34cEqiShwVgie7cB" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Jest.All Tests.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.History.Should display history move.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.History.Should undo move.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.Should get winner.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.Should not update the board when click two times on same case.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.Should not update the board.When there is a winner.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.Should update board.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.Should update the board.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Board Component.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Should exists (1).executor&quot;: &quot;Run&quot;,
    &quot;Jest.Should exists (2).executor&quot;: &quot;Run&quot;,
    &quot;Jest.Should exists.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Square Component.Should exists.executor&quot;: &quot;Run&quot;,
    &quot;Jest.Square Component.executor&quot;: &quot;Run&quot;,
    &quot;Jest.renders learn react link.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;C:/Users/Guest1/Desktop/application/tic-tac-toe/node_modules/react-scripts&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\Guest1\\Desktop\\application\\tic-tac-toe\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Guest1\Desktop\application\tic-tac-toe\src\components" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.All Tests">
    <configuration name="All Tests" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--coverage --env=jsdom" />
      <envs />
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="Board Component (1)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/components/board/Board.test.tsx" />
      <test-names>
        <test-name value="Board Component" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Board Component" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/board/Board.test.tsx" />
      <test-names>
        <test-name value="Board Component" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Board Component.History.Should display history move" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/components/board/Board.test.tsx" />
      <test-names>
        <test-name value="Board Component" />
        <test-name value="History" />
        <test-name value="Should display history move" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Board Component.History.Should undo move" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/components/board/Board.test.tsx" />
      <test-names>
        <test-name value="Board Component" />
        <test-name value="History" />
        <test-name value="Should undo move" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.All Tests" />
        <item itemvalue="Jest.Board Component (1)" />
        <item itemvalue="Jest.Board Component.History.Should undo move" />
        <item itemvalue="Jest.Board Component.History.Should display history move" />
        <item itemvalue="Jest.Board Component" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193" />
        <option value="bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5cc3a863-3764-4353-bfa1-7ef9e9ca42dd" name="Changes" comment="" />
      <created>1732718900909</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1732718900909</updated>
      <workItem from="1732718902250" duration="3444000" />
      <workItem from="1732781589110" duration="21995000" />
      <workItem from="1732868254911" duration="7232000" />
      <workItem from="1732877184857" duration="22000" />
      <workItem from="1732877216221" duration="181000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>